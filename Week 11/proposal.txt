CSE 111 Proposal for a Student Chosen Program

    (This is a proposal. All proposals are written with our best
    knowledge at the beginning of a project. As we progress from the
    beginning to the end of a project, we gain more knowledge, and we
    change some of our proposed ideas. This is part of completing any
    project and is fine.  However, we still must write a proposal so
    that our teachers or supervisors know what we intend to do. Please
    answer each of the following questions to the best of your
    knowledge.)

1. What is the title of your program?
Tuddy The Task

2. What real-world problem will your program address or help to solve?
We use ServiceNow at work. With the way our instance is set up, it's hard to really get a feel for the urgency for certain tickets... And those
are the ones that fal through the cracks in my queue. This program will allow me input the tickets that are in my queue, and the make the time on my 
calendar to get them done. It will also allow for me to make "subtasks" that allow for me to keep track on the progress of each "piece" of complex tickets.
All items will be displayed in a window that shows each. Each will have a different color based on urgency. I'm hoping the scary "red" color will motivate me
a little more to contiune crushing my tickets. There's also some tasks that I'm assigned that don't make there way to ServiceNow and I need something to track
my own progress on things that aren't requests or incidents.

3. What will you learn from developing this program?
I'm hoping that I learn a little more about Tkinter and how to make good looking and modular GUI's with it.

4. What Python modules will your program use?
CSV, Tkinter, Datetime, pytest

    (Some examples are: csv, datetime, functools, matplotlib, math,
    pandas, pytest, random, requests, and tkinter.)

5. Will you separate your Python program into functions that each
perform a single task?
Yes.

    (Remember that the most reusable functions don't get user input and
    don't print results but instead have parameters and return a result.
    Functions that get user input and print results are important and do
    useful work but are not easily reusable.)

    (Remember also that it's hard to test functions that get user input
    and print results. It's easy to test functions that don't get user
    input and don't print results but instead have parameters and return
    a result. Therefore, you should write most of your program functions
    to have parameters and return a result.)

6. Will you write test functions to test at least two of your program
functions?
Yes.